source('~/programme/data_mining/R/StockMarket/StockMarket.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
x1[1:5]
hist(x1[,1])
x2<-xts(rnorm(100), seq(as.POSIX.ct("2000-01-01 13:00"), len=100,by="min"))
x2<-xts(rnorm(100), seq(as.POSIXct("2000-01-01 13:00"), len=100,by="min"))
plot(x2)
plot(x1)
x3<-xts(rnorm(3), as.Date(c("2005-01-01", "2005-01-10", "2005-01-12")))
x3
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
drv<-dbDriver("MySQL")
ch<-dbConnect(drv, dbname="stock_market", "root", "darmstadt")
allQuotes<-dbGetQuery(ch, "select * from gspc")
GSPC<-xts(allQuotes[,-1], order.by=as.Date(allQuotes[,1]))
head(GSPC)
summary(allQuotes)
names(allQuotes)
GSPC<-xts(allQuotes[,1], order.by=as.Date(allQuotes[,1]))
head(GSPC)
GSPC<-xts(allQuotes[,-1], order.by=as.Date(allQuotes[,1]))
head(GSPC)
GSPC<-xts(allQuotes[,-1], order.by=as.Date(allQuotes[,2]))
head(GSPC)
GSPC<-xts(allQuotes[,-1], order.by=as.Date(allQuotes[,1]))
head(GSPC)
dbDisconnect(ch)
dbUloadDriver(drv)
dbUnloadDriver(drv)
summary(GSPC)
T.ind<-function(quotes, tgt.margin=0.0025, n.days=10){
v<-apply(HLC(quotes), 1, mean)
r<-matrix(NA, ncol=n.days, nrow=NROW(quotes))
for(x in 1:n.days) r[,x]<-Next(Delt(v,k=x),x)
x<-apply(r, 1, function(x) sum(x[>tgt.margin ]|x< tgt.margin))
for(x in 1:n.days) r[,x]<-Next(Delt(v,k=x),x)
T.ind<-function(quotes, tgt.margin=0.0025, n.days=10){
v<-apply(HLC(quotes), 1, mean)
r<-matrix(NA, ncol=n.days, nrow=NROW(quotes))
for(x in 1:n.days) r[,x]<-Next(Delt(v,k=x),x)
x<-apply(r, 1, function(x) sum(x[>tgt.margin ]|x<-tgt.margin))
T.ind<-function(quotes, tgt.margin=0.0025, n.days=10){
v<-apply(HLC(quotes), 1, mean)
r<-matrix(NA, ncol=n.days, nrow=NROW(quotes))
for(x in 1:n.days) r[,x]<-Next(Delt(v,k=x),x)
x<-apply(r, 1, function(x) sum(x[x>tgt.margin | x<-tgt.margin))
T.ind<-function(quotes, tgt.margin=0.0025, n.days=10){
v<-apply(HLC(quotes), 1, mean)
r<-matrix(NA, ncol=n.days, nrow=NROW(quotes))
for(x in 1:n.days) r[,x]<-Next(Delt(v,k=x),x)
x<-apply(r, 1, function(x) sum(x[x>tgt.margin | x<-tgt.margin]))
if(is.xts(quots))
xts(x,time(quots))
else
x
}
T.ind<-function(quotes, tgt.margin=0.0025, n.days=10){
source('~/programme/data_mining/R/StockMarket/StockMarket.R', echo=TRUE)
source('~/programme/data_mining/R/StockMarket/StockMarket.R', echo=TRUE)
source('~/programme/data_mining/R/StockMarket/StockMarket.R', echo=TRUE)
candleChart(last(GSPC, "3 months"), theme="white", TA=NULL)
avgPrice<-function(p) apply(HLC(p), 1, mean)
source('~/programme/data_mining/R/StockMarket/StockMarket.R', echo=TRUE)
source('~/programme/data_mining/R/StockMarket/StockMarket.R', echo=TRUE)
library(DMwR)
library(xts)
library(DBI)
library(RMySQL)
# Example time series
x1<-xts(rnorm(100), seq(as.POSIXct("2000-01-01"), len=100, by="day"))
x2<-xts(rnorm(100), seq(as.POSIXct("2000-01-01 13:00"), len=100,by="min"))
x3<-xts(rnorm(3), as.Date(c("2005-01-01", "2005-01-10", "2005-01-12")))
# connect to MySQL database:
drv<-dbDriver("MySQL")
ch<-dbConnect(drv, dbname="stock_market", "root", "darmstadt")
allQuotes<-dbGetQuery(ch, "select * from gspc")
GSPC<-xts(allQuotes[,-1], order.by=as.Date(allQuotes[,1]))
head(GSPC)
dbDisconnect(ch)
dbUnloadDriver(drv)
T.ind<-function(quotes, tgt.margin=0.0025, n.days=10){
v<-apply(HLC(quotes), 1, mean)
r<-matrix(NA, ncol=n.days, nrow=NROW(quotes))
for(x in 1:n.days) r[,x]<-Next(Delt(v,k=x),x)
x<-apply(r, 1, function(x) sum(x[x>tgt.margin | x<-tgt.margin]))
if(is.xts(quotes))
xts(x,time(quotes))
else
x
}
candleChart(last(GSPC, "3 months"), theme="white", TA=NULL)
avgPrice<-function(p) apply(HLC(p), 1, mean)
avgPrice<-function(p) apply(HLC(p), 1, mean)
avgPrice<-function(p) apply(HLC(p), 1, mean)
avgPrice<-function(p) apply(HLC(p), 1, mean)
avgPrice<-function(p) apply(HLC(p), 1, mean)
avgPrice<-function(p) apply(HLC(p), 1, mean)
avgPrice<-function(p) apply(HLC(p), 1, mean)
library(DMwR)
library(xts)
library(DBI)
library(RMySQL)
# Example time series
x1<-xts(rnorm(100), seq(as.POSIXct("2000-01-01"), len=100, by="day"))
x2<-xts(rnorm(100), seq(as.POSIXct("2000-01-01 13:00"), len=100,by="min"))
x3<-xts(rnorm(3), as.Date(c("2005-01-01", "2005-01-10", "2005-01-12")))
# connect to MySQL database:
drv<-dbDriver("MySQL")
ch<-dbConnect(drv, dbname="stock_market", "root", "darmstadt")
allQuotes<-dbGetQuery(ch, "select * from gspc")
GSPC<-xts(allQuotes[,-1], order.by=as.Date(allQuotes[,1]))
head(GSPC)
dbDisconnect(ch)
dbUnloadDriver(drv)
T.ind<-function(quotes, tgt.margin=0.0025, n.days=10){
v<-apply(HLC(quotes), 1, mean)
r<-matrix(NA, ncol=n.days, nrow=NROW(quotes))
for(x in 1:n.days) r[,x]<-Next(Delt(v,k=x),x)
x<-apply(r, 1, function(x) sum(x[x>tgt.margin | x<-tgt.margin]))
if(is.xts(quotes))
xts(x,time(quotes))
else
x
}
candleChart(last(GSPC, "3 months"), theme="white", TA=NULL)
avgPrice<-function(p) apply(HLC(p), 1, mean)
addAvgPrice<-newTA(FUN(=avgPrice, col=1, legend="AvgPrice"))
addAvgPrice<-newTA(FUN=avgPrice, col=1, legend="AvgPrice")
addT.ind<-newTA(FUN=T.ind, col="red", legend="TgtRet")
addAvgPrice(on=1)
addT.ind()
addT.ind<-newTA(FUN=T.ind, col="red", legend="TgtRet")
addAvgPrice(on=1)
addT.ind()
addT.ind()
T.ind<-function(quotes, tgt.margin=0.0025, n.days=10){
v<-apply(HLC(quotes), 1, mean)
r<-matrix(NA, ncol=n.days, nrow=NROW(quotes))
for(x in 1:n.days) r[,x]<-Next(Delt(v,k=x),x)
x<-apply(r, 1, function(x) sum(x[x>tgt.margin | x<tgt.margin]))
if(is.xts(quotes))
xts(x,time(quotes))
else
x
}
candleChart(last(GSPC, "3 months"), theme="white", TA=NULL)
avgPrice<-function(p) apply(HLC(p), 1, mean)
addAvgPrice<-newTA(FUN=avgPrice, col=1, legend="AvgPrice")
addT.ind<-newTA(FUN=T.ind, col="red", legend="TgtRet")
addAvgPrice(on=1)
addT.ind()
candleChart(last(GSPC, "3 months"), theme="black", TA=NULL)
avgPrice<-function(p) apply(HLC(p), 1, mean)
addAvgPrice<-newTA(FUN=avgPrice, col=1, legend="AvgPrice")
addT.ind<-newTA(FUN=T.ind, col="red", legend="TgtRet")
addAvgPrice(on=1)
addT.ind()
candleChart(last(GSPC, "3 months"), theme="white", TA=NULL)
avgPrice<-function(p) apply(HLC(p), 1, mean)
addAvgPrice<-newTA(FUN=avgPrice, col=1, legend="AvgPrice")
addT.ind<-newTA(FUN=T.ind, col="red", legend="TgtRet")
addAvgPrice(on=1)
addT.ind()
source('~/programme/data_mining/R/StockMarket/StockMarket.R', echo=TRUE)
source('~/programme/data_mining/R/StockMarket/StockMarket.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
DAX <- read.csv("~/programme/data_mining/R/StockMarket/DAX.csv", sep=";")
View(DAX)
str(DAX)
DAX$Date<-as.Date(DAX$Date)
str(DAX)
GSPC<-DAX
head(GSPC)
dbDisconnect(ch)
dbUnloadDriver(drv)
T.ind<-function(quotes, tgt.margin=0.0025, n.days=10){
v<-apply(HLC(quotes), 1, mean)
r<-matrix(NA, ncol=n.days, nrow=NROW(quotes))
for(x in 1:n.days) r[,x]<-Next(Delt(v,k=x),x)
x<-apply(r, 1, function(x) sum(x[x>tgt.margin | x<tgt.margin]))
if(is.xts(quotes))
xts(x,time(quotes))
else
x
}
candleChart(last(GSPC, "3 months"), theme="white", TA=NULL)
GSPC<-xts(allQuotes[,-1], order.by=as.Date(allQuotes[,1]))
library(DMwR)
library(xts)
library(DBI)
library(RMySQL)
# Example time series
x1<-xts(rnorm(100), seq(as.POSIXct("2000-01-01"), len=100, by="day"))
x2<-xts(rnorm(100), seq(as.POSIXct("2000-01-01 13:00"), len=100,by="min"))
x3<-xts(rnorm(3), as.Date(c("2005-01-01", "2005-01-10", "2005-01-12")))
# connect to MySQL database:
# drv<-dbDriver("MySQL")
# ch<-dbConnect(drv, dbname="stock_market", "root", "darmstadt")
# allQuotes<-dbGetQuery(ch, "select * from gspc")
# GSPC<-xts(allQuotes[,-1], order.by=as.Date(allQuotes[,1]))
# Dax Values from CSV-file
DAX <- read.csv("~/programme/data_mining/R/StockMarket/DAX.csv", sep=";")
DAX$Date<-as.Date(DAX$Date)
GSPC<-DAX
GSPC<-xts(allQuotes[,-1], order.by=as.Date(allQuotes[,1]))
head(GSPC)
dbDisconnect(ch)
dbUnloadDriver(drv)
T.ind<-function(quotes, tgt.margin=0.0025, n.days=10){
v<-apply(HLC(quotes), 1, mean)
r<-matrix(NA, ncol=n.days, nrow=NROW(quotes))
for(x in 1:n.days) r[,x]<-Next(Delt(v,k=x),x)
x<-apply(r, 1, function(x) sum(x[x>tgt.margin | x<tgt.margin]))
if(is.xts(quotes))
xts(x,time(quotes))
else
x
}
candleChart(last(GSPC, "3 months"), theme="white", TA=NULL)
avgPrice<-function(p) apply(HLC(p), 1, mean)
addAvgPrice<-newTA(FUN=avgPrice, col=1, legend="AvgPrice")
addT.ind<-newTA(FUN=T.ind, col="red", legend="TgtRet")
addAvgPrice(on=1)
addT.ind()
T.ind<-function(quotes, tgt.margin=0.0025, n.days=1){
v<-apply(HLC(quotes), 1, mean)
r<-matrix(NA, ncol=n.days, nrow=NROW(quotes))
for(x in 1:n.days) r[,x]<-Next(Delt(v,k=x),x)
x<-apply(r, 1, function(x) sum(x[x>tgt.margin | x<tgt.margin]))
if(is.xts(quotes))
xts(x,time(quotes))
else
x
}
candleChart(last(GSPC, "3 months"), theme="white", TA=NULL)
avgPrice<-function(p) apply(HLC(p), 1, mean)
addAvgPrice<-newTA(FUN=avgPrice, col=1, legend="AvgPrice")
addT.ind<-newTA(FUN=T.ind, col="red", legend="TgtRet")
addAvgPrice(on=1)
addT.ind()
addT.ind()
candleChart(last(GSPC, "12 months"), theme="white", TA=NULL)
avgPrice<-function(p) apply(HLC(p), 1, mean)
addAvgPrice<-newTA(FUN=avgPrice, col=1, legend="AvgPrice")
addT.ind<-newTA(FUN=T.ind, col="red", legend="TgtRet")
addAvgPrice(on=1)
addT.ind()
addT.ind()
addT.ind()
source('~/programme/data_mining/R/StockMarket/StockMarket.R', echo=TRUE)
source('~/programme/data_mining/R/StockMarket/StockMarket.R', echo=TRUE)
source('~/programme/data_mining/R/StockMarket/StockMarket.R', echo=TRUE)
source('~/programme/data_mining/R/StockMarket/StockMarket.R', echo=TRUE)
DAX <- read.csv("~/programme/data_mining/R/StockMarket/DAX.csv", sep=";")
DAX$Date<-as.Date(DAX$Date)
GSPC<-DAX
GSPC<-xts(allQuotes[,-1], order.by=as.Date(allQuotes[,1]))
head(GSPC)
dbDisconnect(ch)
dbUnloadDriver(drv)
T.ind<-function(quotes, tgt.margin=0.0025, n.days=10){
v<-apply(HLC(quotes), 1, mean)
r<-matrix(NA, ncol=n.days, nrow=NROW(quotes))
for(x in 1:n.days) r[,x]<-Next(Delt(v,k=x),x)
x<-apply(r, 1, function(x) sum(x[x>tgt.margin | x<tgt.margin]))
if(is.xts(quotes))
xts(x,time(quotes))
else
x
}
candleChart(last(GSPC, "3 months"), theme="white", TA=NULL)
avgPrice<-function(p) apply(HLC(p), 1, mean)
addAvgPrice<-newTA(FUN=avgPrice, col=1, legend="AvgPrice")
addT.ind<-newTA(FUN=T.ind, col="red", legend="TgtRet")
addAvgPrice(on=1)
addT.ind()
head(GSPC)
GSPC <- read.csv("~/programme/data_mining/R/StockMarket/DAX.csv", sep=";")
View(DAX)
View(GSPC)
GSPC$Date<-as.Date(GSPC$Date)
GSPC<-xts(allQuotes[,-1], order.by=as.Date(allQuotes[,1]))
head(GSPC)
dbDisconnect(ch)
dbUnloadDriver(drv)
T.ind<-function(quotes, tgt.margin=0.0025, n.days=10){
v<-apply(HLC(quotes), 1, mean)
r<-matrix(NA, ncol=n.days, nrow=NROW(quotes))
for(x in 1:n.days) r[,x]<-Next(Delt(v,k=x),x)
x<-apply(r, 1, function(x) sum(x[x>tgt.margin | x<tgt.margin]))
if(is.xts(quotes))
xts(x,time(quotes))
else
x
}
candleChart(last(GSPC, "3 months"), theme="white", TA=NULL)
avgPrice<-function(p) apply(HLC(p), 1, mean)
addAvgPrice<-newTA(FUN=avgPrice, col=1, legend="AvgPrice")
addT.ind<-newTA(FUN=T.ind, col="red", legend="TgtRet")
addAvgPrice(on=1)
addT.ind()
source('~/programme/data_mining/R/StockMarket/StockMarket.R', echo=TRUE)
library(DMwR)
library(xts)
library(DBI)
library(RMySQL)
# Example time series
x1<-xts(rnorm(100), seq(as.POSIXct("2000-01-01"), len=100, by="day"))
x2<-xts(rnorm(100), seq(as.POSIXct("2000-01-01 13:00"), len=100,by="min"))
x3<-xts(rnorm(3), as.Date(c("2005-01-01", "2005-01-10", "2005-01-12")))
# connect to MySQL database:
drv<-dbDriver("MySQL")
ch<-dbConnect(drv, dbname="stock_market", "root", "darmstadt")
allQuotes<-dbGetQuery(ch, "select * from gspc")
GSPC<-xts(allQuotes[,-1], order.by=as.Date(allQuotes[,1]))
# Dax Values from CSV-file
# GSPC <- read.csv("~/programme/data_mining/R/StockMarket/DAX.csv", sep=";")
# GSPC$Date<-as.Date(GSPC$Date)
# GSPC<-xts(allQuotes[,-1], order.by=as.Date(allQuotes[,1]))
head(GSPC)
dbDisconnect(ch)
dbUnloadDriver(drv)
T.ind<-function(quotes, tgt.margin=0.0025, n.days=10){
v<-apply(HLC(quotes), 1, mean)
r<-matrix(NA, ncol=n.days, nrow=NROW(quotes))
for(x in 1:n.days) r[,x]<-Next(Delt(v,k=x),x)
x<-apply(r, 1, function(x) sum(x[x>tgt.margin | x<tgt.margin]))
if(is.xts(quotes))
xts(x,time(quotes))
else
x
}
candleChart(last(GSPC, "3 months"), theme="white", TA=NULL)
avgPrice<-function(p) apply(HLC(p), 1, mean)
addAvgPrice<-newTA(FUN=avgPrice, col=1, legend="AvgPrice")
addT.ind<-newTA(FUN=T.ind, col="red", legend="TgtRet")
addAvgPrice(on=1)
addT.ind()
source('~/programme/data_mining/R/StockMarket/StockMarket.R', echo=TRUE)
GSPC <- read.csv("~/programme/data_mining/R/StockMarket/DAX.csv", sep=";")
GSPC$Date<-as.Date(GSPC$Date)
GSPC<-xts(allQuotes[,-1], order.by=as.Date(allQuotes[,1]))
head(GSPC)
dbDisconnect(ch)
dbUnloadDriver(drv)
T.ind<-function(quotes, tgt.margin=0.0025, n.days=10){
v<-apply(HLC(quotes), 1, mean)
r<-matrix(NA, ncol=n.days, nrow=NROW(quotes))
for(x in 1:n.days) r[,x]<-Next(Delt(v,k=x),x)
x<-apply(r, 1, function(x) sum(x[x>tgt.margin | x<tgt.margin]))
if(is.xts(quotes))
xts(x,time(quotes))
else
x
}
candleChart(last(GSPC, "3 months"), theme="white", TA=NULL)
candleChart(last(GSPC, "12 months"), theme="white", TA=NULL)
avgPrice<-function(p) apply(HLC(p), 1, mean)
addAvgPrice<-newTA(FUN=avgPrice, col=1, legend="AvgPrice")
addT.ind<-newTA(FUN=T.ind, col="red", legend="TgtRet")
addAvgPrice(on=1)
addT.ind()
addT.ind()
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/programme/data_mining/R/StockMarket/StockMarket.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/programme/data_mining/R/StockMarket/StockMarket.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/programme/data_mining/R/StockMarket/StockMarket.R', echo=TRUE)
source('~/programme/data_mining/R/StockMarket/StockMarket.R', echo=TRUE)
source('~/programme/data_mining/R/StockMarket/StockMarket.R', echo=TRUE)
source('~/programme/data_mining/R/StockMarket/StockMarket.R', echo=TRUE)
library(DMwR)
source('~/programme/data_mining/R/StockMarket/StockMarket.R', echo=TRUE)
source('~/programme/data_mining/R/StockMarket/StockMarket.R', echo=TRUE)
