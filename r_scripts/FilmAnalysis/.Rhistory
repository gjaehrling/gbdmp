film_analysis <- read.csv("~/programme/data_mining/R/FilmAnalysis/film_analysis.csv")
View(film_analysis)
head(film_analysis)
summary(film_analysis)
hist(film_analysis$film_id)
hist(film_analysis$rental_time)
plot(film_analysis$rental_time)
plot(film_analysis$film_id,film_analysis$rental_time)
plot(film_analysis$customer_id,film_analysis$rental_time)
plot(film_analysis$category_name,film_analysis$rental_time)
source('~/programme/data_mining/R/FilmAnalysis/film_analysis.R', echo=TRUE)
cl.m<-Mclust(Fa[1:100,2:4])
cl.m<-Mclust(Fa[1:1000,2:4])
cl.m<-Mclust(Fa[1:5000,2:4])
# find film clusters
plot(cl.m, Fa[,2:4], what=c("classification"))
plot(cl.m, Fa[,2:4], cex=0.7, what=c("classification"))
par(new=TRUE)
plot(cl.m, Fa[,2:4], cex=0.9, what=c("classification"))
plot(cl.m, Fa[,2:4], cex=0.2, what=c("classification"))
dev.off()
plot(cl.m, Fa[,2:4], cex=0.9, what=c("classification"))
plot(cl.m, Fa[,2:4], cex=0.9, what=c("classification"))
dev.off()
plot(cl.m, Fa[,2:4], cex=0.9, what=c("classification"))
dev.off()
plot(cl.m, Fa[,2:4], cex=0.9, what=c("classification"))
par(mfrow=c(1,28))
plot(cl.m, Fa[,2:4], cex=0.9, what=c("classification"))
dev.off()
par(mfrow=c(1,28))
plot(cl.m, Fa[,2:4], cex=0.9, what=c("classification"))
par(mfrow=c(1,1))
plot(cl.m, Fa[,2:4], cex=0.9, what=c("classification"))
dev.off()
par(mfrow=c(1,1))
plot(cl.m, Fa[,2:4], cex=0.9, what=c("classification"))
cl.m<-Mclust(Fa[1:2000,2:4])
dev.off()
par(mfrow=c(1,1))
plot(cl.m, Fa[,2:4], cex=0.9, what=c("classification"))
cl.m<-Mclust(Fa[1:1000,2:4])
dev.off()
par(mfrow=c(1,1))
plot(cl.m, Fa[,2:4], cex=0.9, what=c("classification"))
plot(cl.m, Fa[,2:4], cex=0.1, what=c("classification"))
dev.off()
par(mfrow=c(1,1))
plot(cl.m, Fa[,2:4], cex=0.1, what=c("classification"))
scatterplot(cl.m, Fa[,2:4], cex=0.1, what=c("classification"))
smoothScatter(cl.m, Fa[,2:4], cex=0.1, what=c("classification"))
smoothScatter(cl.m, Fa[,2:4])
smoothScatter(cl.m)
cl.m<-Mclust(Fa[1:5000,2:4])
cl.m$parameters$mean
cl.m$parameters
cl.m$parameters$mean
cl.m$parameters$mean
FilmTransactions <- read.csv("~/programme/data_mining/R/FilmAnalysis/FilmTransactions.csv")
View(FilmTransactions)
library("arules");
FilmTransactions<-read.transactions("FilmTransactions.csv", format="single", rm.duplicates=TRUE, sep=";", cols=c(1,3))
inspect(WineryData)
FilmTransactions<-read.transactions("FilmTransactions.csv", format="single", rm.duplicates=TRUE, sep=",", cols=c(1,3))
inspect(WineryData)
basket_rules <- aprioriFilmTransactions,parameter = list(sup = 0.1, conf = 0.4,target="rules"));
basket_rules <- apriori(FilmTransactions,parameter = list(sup = 0.1, conf = 0.4,target="rules"));
basket_rules <- apriori(FilmTransactions,parameter = list(sup = 0.1, conf = 0.1,target="rules"));
FilmTransactions<-read.transactions("FilmTransactions.csv", format="single", rm.duplicates=TRUE, sep=",", cols=c(1,2))
# inspect(WineryData)
# image(WineryData)
basket_rules <- apriori(FilmTransactions,parameter = list(sup = 0.1, conf = 0.1,target="rules"));
inspect(FilmTransactions)
inspect(FilmTransactions[1:5,])
inspect(FilmTransactions[1:5,])
image(FilmTransactions)
source('~/programme/data_mining/R/FilmAnalysis/film_analysis.R', echo=TRUE)
plot(cl.m, Fa[1:5000,2:4], what="classification")
image(cl.m, Fa[1:5000,2:4])
cl.m<-Mclust(Fa[1:5000,2:3])
cl.m$parameters$mean
plot(cl.m, Fa[1:5000,2:3], what="classification")
plot(cl.m, Fa[1:5000,2:3], what="classification", dimens=c(1,2))
cl.m<-Mclust(Fa[1:6000,2:3])
cl.m$parameters$mean
plot(cl.m, Fa[1:6000,2:3], what="classification", dimens=c(1,2))
plot(cl.m, Fa[1:6000,2:3], what="classification", dimens=c(1,2), cex=0.1)
plot(cl.m, Fa[1:6000,2:3], what="classification", dimens=c(1,2), cex=0.01)
cl.m<-Mclust(Fa[,2:3])
cl.m<-Mclust(Fa[1:7000,2:3])
cl.m$parameters$mean
plot(cl.m, Fa[1:7000,2:3], what="classification", dimens=c(1,2), cex=0.1)
cl.m<-Mclust(Fa[1:6000,2:3])
cl.m$parameters$mean
plot(cl.m, Fa[1:6000,2:3], what="classification", dimens=c(1,2), cex=0.1)
FilmTransactions<-read.transactions("FilmTransactions.csv", format="single", rm.duplicates=TRUE, sep=",", cols=c(1,10))
inspect(FilmTransactions[1:5,])
image(FilmTransactions)
basket_rules <- apriori(FilmTransactions,parameter = list(sup = 0.1, conf = 0.1,target="rules"));
basket_rules <- apriori(FilmTransactions,parameter = list(sup = 0.5, conf = 0.9,target="rules"));
basket_rules <- apriori(FilmTransactions,parameter = list(sup = 0.5, conf = 0.5,target="rules"));
basket_rules <- apriori(FilmTransactions,parameter = list(sup = 0.5, conf = 0.7,target="rules"));
basket_rules <- apriori(FilmTransactions,parameter = list(sup = 0.7, conf = 0.7,target="rules"));
basket_rules <- apriori(FilmTransactions,parameter = list(sup = 0.7, conf = 0.8,target="rules"));
basket_rules <- apriori(FilmTransactions,parameter = list(sup = 0.8, conf = 0.8,target="rules"));
# Check the generated rules using inspect
inspect(basket_rules)
FilmTransactions<-read.transactions("FilmTransactions.csv", format="single", rm.duplicates=TRUE, sep=",", cols=c(1,10))
inspect(FilmTransactions[1:5,])
image(FilmTransactions)
basket_rules <- apriori(FilmTransactions,parameter = list(sup = 0.8, conf = 0.8,target="rules"));
# Check the generated rules using inspect
inspect(basket_rules)
summary(basket_rules)
source('~/programme/data_mining/R/FilmAnalysis/film_analysis.R', echo=TRUE)
# load package for Cluster Analysis
# load package for Cluster Analysis
library(mclust)
# libraries
library(mclust)
film_analysis <- read.csv("~/programme/data_mining/R/FilmAnalysis/film_analysis.csv")
head(film_analysis)
library(mclust)
# load data
film_analysis <- read.csv("~/programme/data_mining/R/FilmAnalysis/film_analysis.csv")
film_analysis <- read.csv("~/Dropbox/user_gerd/programme/data_mining/R/FilmAnalysis/film_analysis.csv")
head(film_analysis)
summary(film_analysis)
# create time-series object
Fa.ts<-aggregate(x=film_analysis$rental_time, by=list(film=film_analysis$film_id), FUN=ts)
names(Fa.ts)<-c("Film", "TimeSeries")
str(Fa.ts[1:3,])
# mean value of time series
Fa.mean<-sapply(Fa.ts[, "TimeSeries"], FUN=mean)
Fa<-cbind(Fa.ts, Mean=Fa.mean)
Fa<-cbind(Fa, StdDev=sapply(Fa.ts[, "TimeSeries"], FUN=sd))
Fa.nr<-aggregate(x=film_analysis$rental_time, by=list(Customer=film_analysis$customer_id), FUN=length)
names(Fa.nr)<-c("Customer", "Nr.Orders")
Fa<-merge(Fa,Fa.nr)
Fa<-Fa[,c(1,3,4,6,5,2)]
str(Fa[1:3,])
# find film clusters
cl.m<-Mclust(Fa[1:6000,2:3])
cl.m$parameters$mean
plot(cl.m, Fa[1:6000,2:3], what="classification", dimens=c(1,2), cex=0.1)
plot(cl.m, Fa[1:6000,2:3], what="classification", dimens=c(1,2), cex=0.1)
plot(cl.m, Fa[1:6000,2:3], what="classification", dimens=c(1,2), cex=0.1)
