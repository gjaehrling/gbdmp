install.packages("sparklyr")
library(sparklyr)
spark_install(version = "1.6.0")
sc <- spark_connect(master = "local")
library(sparklyr)
devtools::install_github("rstudio/sparklyr")
Sys.getenv("SPARK_HOME")
spark_install(version = "2.0.0")
sc <- spark_connect(master = "local")
sc <- spark_connect(master = "local", spark_home = Sys.getenv("SPARK_HOME"))
Sys.getenv("SPARK_HOME")
Sys.getenv("SPARK_HOME_VERSION")
Sys.getenv("SPARK_HOME")
Sys.getenv("SPARK_HOME_VERSION")
SPARK_HOME_VERSION
Sys.getenv("SPARK_HOME_VERSION")
sc <- spark_connect(master = "local", spark_home = Sys.getenv("SPARK_HOME"))
source('~/SVNWorkplace/SVNRepository/trunk/r_scripts/SparkTest/SparkTest.R')
library(sparklyr)
Sys.getenv("SPARK_HOME")
Sys.getenv("SPARK_HOME_VERSION")
sc <- spark_connect(master = "local", spark_home = Sys.getenv("SPARK_HOME"), spark_version = "1.6.0")
sc <- spark_connect(master = "local", spark_home = Sys.getenv("SPARK_HOME"))
Sys.setenv("SPARK_HOME_VERSION=1.6.0")
Sys.setenv(SPARK_HOME_VERSION="1.6.0")
sc <- spark_connect(master = "local", spark_home = Sys.getenv("SPARK_HOME"))
sc
source('~/SVNWorkplace/SVNRepository/trunk/r_scripts/SparkTest/SparkTest.R')
#install.packages("sparklyr")
library(sparklyr)
#spark_install(version = "2.0.0")
#devtools::install_github("rstudio/sparklyr")
Sys.getenv("SPARK_HOME")
Sys.getenv("SPARK_HOME_VERSION")
Sys.setenv(SPARK_HOME_VERSION="1.6.0")
sc <- spark_connect(master = "local", spark_home = Sys.getenv("SPARK_HOME"))
sc
df <- createDataFrame(sqlContext, faithful)
sqlContext <- sparkRSQL.init(sc)
library(SparkR, lib.loc = c(file.path(Sys.getenv("SPARK_HOME"), "R", "lib")))
sc <- sparkR.init(master = "local[*]", sparkEnvir = list(spark.driver.memory="2g"))
sc
sc <- spark_connect(master = "local", spark_home = Sys.getenv("SPARK_HOME"))
sc
sc <- sparkR.init(master = "local[*]", sparkEnvir = list(spark.driver.memory="2g"))
df <- createDataFrame(sqlContext, faithful)
sc <- sparkR.init(sparkPackages="com.databricks:spark-csv_2.11:1.0.3")
sqlContext <- sparkRSQL.init(sc)
library(SparkR, lib.loc = c(file.path(Sys.getenv("SPARK_HOME"), "R", "lib")))
sparkR.session(master = "local[*]", sparkConfig = list(spark.driver.memory = "2g"))
sc <- sparkR.session(master = "local[*]", sparkConfig = list(spark.driver.memory = "2g"))
library(sparklyr)
library(SparkR, lib.loc = c(file.path(Sys.getenv("SPARK_HOME"), "R", "lib")))
#spark_install(version = "2.0.0")
#devtools::install_github("rstudio/sparklyr")
Sys.getenv("SPARK_HOME")
Sys.getenv("SPARK_HOME_VERSION")
Sys.setenv(SPARK_HOME_VERSION="1.6.0")
sc <- spark_connect(master = "local", spark_home = Sys.getenv("SPARK_HOME"))
sc
install.packages(c("nycflights13", "Lahman"))
library(dplyr)
iris_tbl <- copy_to(sc, iris)
flights_tbl <- copy_to(sc, nycflights13::flights, "flights")
sparkR.session()
library(SparkR, lib.loc = c(file.path(Sys.getenv("SPARK_HOME"), "R", "lib")))
sparkR.session(master = "local[*]", sparkConfig = list(spark.driver.memory = "2g"))
library(rJava)
install.packages("rJava")
library(SparkR)
sparkR.session(master = "local[*]", sparkConfig = list(spark.driver.memory = "2g"))
sc <- sparkR.init(sparkPackages = "com.databricks:spark-csv_2.11:1.4.0")
sqlContext <- sparkRSQL.init(sc)
sparkR.session(master = "local[*]", sparkConfig = list(spark.driver.memory = "2g"))
install.packages(c("nycflights13", "Lahman"))
install.packages(c("nycflights13", "Lahman"))
library(sparklyr)
library(dplyr)
library(SparkR, lib.loc = c(file.path(Sys.getenv("SPARK_HOME"), "R", "lib")))
#spark_install(version = "2.0.0")
#devtools::install_github("rstudio/sparklyr")
Sys.getenv("SPARK_HOME")
Sys.getenv("SPARK_HOME_VERSION")
Sys.setenv(SPARK_HOME_VERSION="1.6.0")
sc <- spark_connect(master = "local", spark_home = Sys.getenv("SPARK_HOME"))
library(DBI)
check_tables <- dbGetQuery(sc, "show tables")
check_tables
dbGetQuery(sc, "use gbdmp")
check_tables <- dbGetQuery(sc, "show tables")
check_tables
dbGetQuery(sc, "describe reviews")
some_data = dbGetQuery(sc, "SELECT * from reviews limit 10")
some_data
some_data = dbGetQuery(sc, "SELECT * from business limit 10")
some_data
iris_tbl <- copy_to(sc, iris)
library(sparklyr)
library(dplyr)
library(DBI)
library(SparkR, lib.loc = c(file.path(Sys.getenv("SPARK_HOME"), "R", "lib")))
#spark_install(version = "2.0.0")
#devtools::install_github("rstudio/sparklyr")
Sys.getenv("SPARK_HOME")
Sys.getenv("SPARK_HOME_VERSION")
Sys.setenv(SPARK_HOME_VERSION="1.6.0")
sc <- spark_connect(master = "local", spark_home = Sys.getenv("SPARK_HOME"))
sc
iris_tbl <- copy_to(sc, iris)
install.packages(c("nycflights13", "Lahman"))
iris_tbl <- copy_to(sc, iris)
library(datasets)
iris_tbl <- copy_to(sc, iris)
iris_tbl <- copy_to(sc, iris)
iris_tbl <- copy_to(sc, iris)
flights_tbl <- copy_to(sc, nycflights13::flights, "flights")
iris_tbl <- copy_to(sc, iris)
iris_preview <- dbGetQuery(sc, "SELECT * FROM iris LIMIT 10")
iris_preview
plot(iris_preview)
#install.packages("sparklyr")
install.packages(c("nycflights13", "Lahman"))
#install.packages(c("nycflights13", "Lahman"))
library(sparklyr)
library(dplyr)
library(DBI)
library(datasets)
library(SparkR, lib.loc = c(file.path(Sys.getenv("SPARK_HOME"), "R", "lib")))
#spark_install(version = "2.0.0")
#devtools::install_github("rstudio/sparklyr")
Sys.getenv("SPARK_HOME")
Sys.getenv("SPARK_HOME_VERSION")
Sys.setenv(SPARK_HOME_VERSION="1.6.0")
sc <- spark_connect(master = "local", spark_home = Sys.getenv("SPARK_HOME"))
sc
dbGetQuery(sc, "use gbdmp")
check_tables <- dbGetQuery(sc, "show tables")
check_tables
dbGetQuery(sc, "describe reviews")
some_data = dbGetQuery(sc, "SELECT * from business limit 10")
some_data
check_tables
dbGetQuery(sc, "describe reviews")
some_data = dbGetQuery(sc, "SELECT * from business limit 10")
some_data
dbGetQuery(sc, "describe business")
some_data = dbGetQuery(sc, "SELECT name, latitude, longitude from business limit 10")
some_data
library(rworldmap)
install.packages("rworldmap")
library(rworldmap)
newmap <- getMap(resolution = "low")
plot(newmap, xlim = c(-20, 59), ylim = c(35, 71), asp = 1)
# test with ggmap
install.packages("ggmap")
install.packages("RgoogleMaps")
install.packages("leaflet")
install.packages("png")
install.packages("sparklyr")
install.packages("sparklyr")
install.packages("png")
install.packages("leaflet")
library(leaflet)
install.packages("leaflet")
install.packages("ggmap")
install.packages("ggmap")
library(leaflet)
library(ggmap)
some_data$name
some_data$longitude
help(ggmap)
qplot(some_data$longitude, some_data$latitude, data = some_data, colour = class)
qplot(lon, lat, data = some_data, colour = class)
str(some_data)
qplot(longitude, latitude, data = some_data)
some_data = dbGetQuery(sc, "SELECT name, latitude, longitude from business limit 20")
e
Sys.getenv("SPARK_HOME")
Sys.getenv("SPARK_HOME_VERSION")
Sys.setenv(SPARK_HOME_VERSION="1.6.0")
sc <- spark_connect(master = "local", spark_home = Sys.getenv("SPARK_HOME"))
sc
dbGetQuery(sc, "use gbdmp")
library(sparklyr)
library(dplyr)
library(DBI)
library(datasets)
library(leaflet)
library(ggmap)
library(SparkR, lib.loc = c(file.path(Sys.getenv("SPARK_HOME"), "R", "lib")))
Sys.getenv("SPARK_HOME")
Sys.getenv("SPARK_HOME_VERSION")
Sys.setenv(SPARK_HOME_VERSION="1.6.0")
sc <- spark_connect(master = "local", spark_home = Sys.getenv("SPARK_HOME"))
sc
dbGetQuery(sc, "use gbdmp")
check_tables <- dbGetQuery(sc, "show tables")
check_tables
dbGetQuery(sc, "describe business")
some_data = dbGetQuery(sc, "SELECT name, latitude, longitude from business limit 20")
str(some_data)
# #########################################################
# test with rworldmap:
# install.packages("rworldmap")
library(rworldmap)
some_data$longitude
qplot(longitude, latitude, data = some_data)
ggmap(hdf, extent = "normal") +
geom_point(aes(x = longitude, y = latitude, color = "red"), data = some_data, alpha = .5)
hdf <- get_map("houston, texas")
ggmap(hdf, extent = "normal")
ggmap(hdf, extent = "normal") +
geom_point(aes(x = longitude, y = latitude, color = "red"), data = some_data, alpha = .5)
hdf <- get_map("darmstadt, Germany")
ggmap(hdf, extent = "normal")
some_data$longitude
qplot(longitude, latitude, data = some_data)
ggmap(hdf, extent = "normal") +
geom_point(aes(x = longitude, y = latitude, color = "red"), data = some_data, alpha = .5)
hdf <- get_map()
ggmap(hdf, extent = "normal")
ggmap(hdf, extent = "normal") +
geom_point(aes(x = longitude, y = latitude, color = "red"), data = some_data, alpha = .5)
some_data$latitude
hdf <- get_map(c(-79.90070, 40.35433)
)ggmap(hdf, extent = "normal")
hdf <- get_map(c(-79.90070, 40.35433))
ggmap(hdf, extent = "normal") +
geom_point(aes(x = longitude, y = latitude, color = "red"), data = some_data, alpha = .5)
library(leaflet)
ggmap(hdf, extent = "normal") +
geom_point(aes(x = longitude, y = latitude, color = "red"), data = some_data, alpha = 1)
ggmap(hdf, extent = "device")
ggmap(hdf, extent = "device")
ggmap(hdf, extent = "normal") +
geom_point(aes(x = longitude, y = latitude, color = "red"), data = some_data, alpha = 1)
ggmap(hdf, extent = "device") +
geom_point(aes(x = longitude, y = latitude, color = "red"), data = some_data, alpha = 1)
ggmap(hdf, extent = "panel") +
geom_point(aes(x = longitude, y = latitude, color = "red"), data = some_data, alpha = 1)
some_data = dbGetQuery(sc, "SELECT name, latitude, longitude from business limit 100")
str(some_data)
hdf <- get_map(c(-79.90070, 40.35433))
ggmap(hdf, extent = "device")
ggmap(hdf, extent = "panel") +
geom_point(aes(x = longitude, y = latitude, color = "red"), data = some_data, alpha = 1)
library(leaflet)
m <- leaflet()
m <- addTiles(m)
m <- addMarkers(m, lng=174.768, lat=-36.852, popup="The birthplace of R")
m
str(some_data)
library(htmltools)
leaflet(some_data) %>% addTiles() %>%
addMarkers(~longitude, ~latitude, popup = ~htmlEscape(name))
some_data <- dbGetQuery(sc, "SELECT name, latitude, longitude from business limit 100")
m <- leaflet()
m <- addTiles(m)
m <- addMarkers(m, lng=174.768, lat=-36.852, popup="The birthplace of R")
m
leaflet(some_data) %>% addTiles() %>%
addMarkers(~longitude, ~latitude, popup = ~htmlEscape(name))
leaflet(some_data) %>% addTiles() %>%
addMarkers(~longitude, ~latitude, popup = ~htmlEscape(name))
# install.packages("sparklyr")
# install.packages(c("nycflights13", "Lahman"))
# install.packages("leaflet")
# install.packages("ggmap")
# ###################################################
library(sparklyr)
library(dplyr)
library(DBI)
library(datasets)
library(leaflet)
library(ggmap)
library(SparkR, lib.loc = c(file.path(Sys.getenv("SPARK_HOME"), "R", "lib")))
# ###################################################
#spark_install(version = "2.0.0")
#devtools::install_github("rstudio/sparklyr")
Sys.getenv("SPARK_HOME")
Sys.getenv("SPARK_HOME_VERSION")
Sys.setenv(SPARK_HOME_VERSION="1.6.0")
sc <- spark_connect(master = "local", spark_home = Sys.getenv("SPARK_HOME"))
sc
# ###################################################
dbGetQuery(sc, "use gbdmp")
check_tables <- dbGetQuery(sc, "show tables")
check_tables
dbGetQuery(sc, "describe business")
some_data <- dbGetQuery(sc, "SELECT name, latitude, longitude from business limit 100")
str(some_data)
library(rworldmap)
newmap <- getMap(resolution = "low")
plot(newmap, xlim = c(-20, 59), ylim = c(35, 71), asp = 1)
# test with ggmap
# hdf <- get_map("darmstadt, Germany")
hdf <- get_map(c(-79.90070, 40.35433))
ggmap(hdf, extent = "device")
ggmap(hdf, extent = "panel") +
geom_point(aes(x = longitude, y = latitude, color = "red"), data = some_data, alpha = 1)
library(leaflet)
library(htmltools)
m <- leaflet()
m <- addTiles(m)
m <- addMarkers(m, lng=174.768, lat=-36.852, popup="The birthplace of R")
m
leaflet(some_data) %>% addTiles() %>%
addMarkers(~longitude, ~latitude, popup = ~htmlEscape(name))
some_data <- dbGetQuery(sc, "SELECT name, latitude, longitude from business limit 100 order by latitude")
some_data <- dbGetQuery(sc, "SELECT name, latitude, longitude from business order by latitude limit 100")
leaflet(some_data) %>% addTiles() %>%
addMarkers(~longitude, ~latitude, popup = ~htmlEscape(name))
some_data <- dbGetQuery(sc, "SELECT name, latitude, longitude from business order by latitude, longitude limit 100")
leaflet(some_data) %>% addTiles() %>%
addMarkers(~longitude, ~latitude, popup = ~htmlEscape(name))
some_data <- dbGetQuery(sc, "SELECT name, latitude, longitude from business order by longitude limit 100")
leaflet(some_data) %>% addTiles() %>%
addMarkers(~longitude, ~latitude, popup = ~htmlEscape(name))
some_data <- dbGetQuery(sc, "SELECT name, latitude, longitude from business order limit 100")
some_data <- dbGetQuery(sc, "SELECT name, latitude, longitude from business llimit 100")
some_data <- dbGetQuery(sc, "SELECT name, latitude, longitude from business limit 100")
leaflet(some_data) %>% addTiles() %>%
addMarkers(~longitude, ~latitude, popup = ~htmlEscape(name))
some_data <- dbGetQuery(sc, "SELECT name, latitude, longitude from business limit 1000")
leaflet(some_data) %>% addTiles() %>%
addMarkers(~longitude, ~latitude, popup = ~htmlEscape(name))
some_data <- dbGetQuery(sc, "SELECT name, latitude, longitude from business")
leaflet(some_data) %>% addTiles() %>%
addMarkers(~longitude, ~latitude, popup = ~htmlEscape(name))
some_data <- dbGetQuery(sc, "SELECT name, latitude, longitude from business limit 100")
l
leaflet(some_data) %>% addTiles() %>%
addMarkers(~longitude, ~latitude, popup = ~htmlEscape(name))
library(sparklyr)
library(dplyr)
library(DBI)
library(datasets)
library(leaflet)
library(ggmap)
library(SparkR, lib.loc = c(file.path(Sys.getenv("SPARK_HOME"), "R", "lib")))
# ###################################################
#spark_install(version = "2.0.0")
#devtools::install_github("rstudio/sparklyr")
Sys.getenv("SPARK_HOME")
Sys.getenv("SPARK_HOME_VERSION")
# Sys.setenv(SPARK_HOME_VERSION="1.6.0")
sc <- spark_connect(master = "local", spark_home = Sys.getenv("SPARK_HOME"))
sc
# ###################################################
dbGetQuery(sc, "use gbdmp")
check_tables <- dbGetQuery(sc, "show tables")
check_tables
dbGetQuery(sc, "describe business")
some_data <- dbGetQuery(sc, "SELECT name, latitude, longitude from business limit 100")
str(some_data)
# #########################################################
# test with rworldmap:
# install.packages("rworldmap")
library(rworldmap)
newmap <- getMap(resolution = "low")
plot(newmap, xlim = c(-20, 59), ylim = c(35, 71), asp = 1)
# test with ggmap
# hdf <- get_map("darmstadt, Germany")
hdf <- get_map(c(-79.90070, 40.35433))
ggmap(hdf, extent = "device")
qplot(longitude, latitude, data = some_data)
ggmap(hdf, extent = "panel") +
geom_point(aes(x = longitude, y = latitude, color = "red"), data = some_data, alpha = 1)
# ##########################################################
library(leaflet)
library(htmltools)
m <- leaflet()
m <- addTiles(m)
m <- addMarkers(m, lng=174.768, lat=-36.852, popup="The birthplace of R")
m
leaflet(some_data) %>% addTiles() %>%
addMarkers(~longitude, ~latitude, popup = ~htmlEscape(name))
